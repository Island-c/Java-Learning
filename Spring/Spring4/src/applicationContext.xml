<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd"
        default-autowire="byName"
        >
 
      
      	<bean id= "dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="jdbc:mysql://localhost:3306/ssm?useSSL=false"></property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
		</bean>
		
			<!--创建SqlSessionFactory对象  -->
		<bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<!-- 数据库连接信息来源于dataSource -->
			<property name="dataSource" ref="dataSource"></property>
		</bean>
		
		<!-- 扫描器，相当于mybatis的xml中 mapper下package标签,扫描com.lc.mapper包后会给对应接口创建对象 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<!-- 要扫描哪个包 -->
			<property name="basePackage" value="com.lc.mapper"></property>
			<!-- 和factory产生关系 -->
			<property name="sqlSessionFactory" ref="factory"></property>
		</bean>
		
      <!-- 通知类 -->
      <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      	<property name="dataSource" ref=""></property>
      </bean>   
      
      <!-- 配置声明式事务 -->
      <tx:advice id="txAdvice" transaction-manager="txManager">
      	<tx:attributes>
      		<!-- 哪些方法需要有事务控制 -->
      		<!-- 可以用通配符，以ins开头的方法都进行事务管理 -->
      		<tx:method name="ins*"/>
      		<tx:method name="del*"/>
      		<tx:method name="upd*" rollback-for="java.lang.Exception"/>
      		<tx:method name="*" read-only="true"/>
      	</tx:attributes>
      </tx:advice>
      
      <aop:config>
      	<!-- 切点范围设置大一些 -->
      	<aop:pointcut expression="execution(* com.lc.service.impl.*.*(..))" id="mypoint"/>
      	<aop:advisor advice-ref="txAdvice" pointcut-ref="mypoint"/>
      </aop:config>
 
        
</beans>
